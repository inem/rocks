#!/bin/bash

# Initialize project with makefiles
# Usage: curl -sSL <URL>/install | bash

# Check if we're in a git repository
if [ ! -d ".git" ]; then
    echo "‚ùå This directory is not a git repository"
    echo "   Rocks system requires git to function properly"
    echo "   Please run: git init"
    echo "   Or navigate to an existing git repository"
    exit 1
fi

echo "üöÄ Initializing project with makefiles..."

# Configure all user settings at once
if command -v gh >/dev/null 2>&1 && gh auth status >/dev/null 2>&1; then
    username=$(gh api user --jq '.login' 2>/dev/null)
    if [ -n "$username" ]; then
        git config --global github.user "$username" 2>/dev/null || true
        git config --global rocks.source "$username/rocks" 2>/dev/null || true
        echo "‚úÖ Configured for GitHub user: $username"
    fi
fi

if command -v glab >/dev/null 2>&1 && glab auth status >/dev/null 2>&1; then
    username=$(glab api user --jq '.username' 2>/dev/null)
    if [ -n "$username" ]; then
        git config --global gitlab.user "$username" 2>/dev/null || true
        echo "‚úÖ Configured GitLab user: $username"
    fi
fi

# Check final configuration
if git config --get rocks.source >/dev/null 2>&1; then
    echo "‚úÖ Rocks source: $(git config --get rocks.source)"
else
    echo "‚ö†Ô∏è  Rocks source not configured"
    echo "   Run: git config --global rocks.source YOUR_USERNAME/rocks"
    echo "   Example: git config --global rocks.source inem/rocks"
fi

# Download make-engine (always required)
echo "üì• Downloading make-engine..."
for attempt in 1 2 3; do
    if curl -fsSL --connect-timeout 5 --max-time 10 "https://instll.sh/inem/rocks/make-engine" > "make-engine.mk" && [ -s "make-engine.mk" ]; then
        break
    else
        echo "‚ö†Ô∏è  Attempt $attempt failed, retrying..."
        rm -f "make-engine.mk"
        if [ $attempt -eq 3 ]; then
            echo "‚ùå Failed to download make-engine after 3 attempts"
            exit 1
        fi
        sleep 1
    fi
done
echo "‚úÖ Downloaded make-engine.mk"

# Download default modules
echo "üì• Downloading default modules..."
defaults_url="https://instll.sh/inem/rocks/defaults"
for attempt in 1 2 3; do
    defaults=$(curl -fsSL --connect-timeout 5 --max-time 10 "$defaults_url" 2>/dev/null | grep -v '^#' | grep -v '^$')
    if [ -n "$defaults" ]; then
        break
    else
        if [ $attempt -eq 3 ]; then
            echo "‚ö†Ô∏è  Failed to fetch defaults after 3 attempts"
        else
            echo "‚ö†Ô∏è  Attempt $attempt failed, retrying defaults..."
            sleep 1
        fi
    fi
done

if [ -n "$defaults" ]; then
    while IFS= read -r module; do
        if [ -n "$module" ]; then
            echo "üì¶ Installing module: $module"
            module_url="https://instll.sh/inem/rocks/make-$module"
            for attempt in 1 2 3; do
                if curl -fsSL --connect-timeout 5 --max-time 10 "$module_url" > "make-$module.mk" && [ -s "make-$module.mk" ]; then
                    echo "‚úÖ Downloaded make-$module.mk"
                    break
                else
                    rm -f "make-$module.mk"
                    if [ $attempt -eq 3 ]; then
                        echo "‚ö†Ô∏è  Failed to download make-$module after 3 attempts (skipping)"
                    else
                        echo "‚ö†Ô∏è  Attempt $attempt failed, retrying make-$module..."
                        sleep 1
                    fi
                fi
            done
        fi
    done <<< "$defaults"
else
    echo "‚ö†Ô∏è  Could not fetch defaults, skipping additional modules"
    echo "üîç Debug: defaults content was empty"
fi

# Create/update Makefile
if [[ -f "./Makefile" ]]; then
    if ! grep -q "include make-\*\.mk" "./Makefile" 2>/dev/null; then
        echo "üìù Adding include make-*.mk to existing Makefile..."
        echo -e "include make-*.mk\n$(cat ./Makefile)" > ./Makefile.tmp
        mv ./Makefile.tmp ./Makefile
        echo "‚úÖ Added include to Makefile"
    else
        echo "‚úÖ Makefile already includes make-*.mk"
    fi
else
    echo "üìù Creating Makefile..."
    echo "include make-*.mk" > "Makefile"
    echo "‚úÖ Created Makefile"
fi

echo ""
echo "üéâ Project initialized! Now you can:"
echo "  $ make <any-command>  # will auto-find and add commands"
echo "  $ make it             # manually find last failed command"
echo "  $ make instll <pkg>   # install packages from instll.sh"
echo "  $ make vars           # show system variables"

echo ""
echo "Try:"
echo "  $ make deploy"
echo "  $ make it"
echo "  $ make instll inem/dot-commit  # install additional tools"
